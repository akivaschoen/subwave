// Generated by LiveScript 1.3.1
var path, nar, common, program, echo, onEntry, onError, onArchive, extract;
path = require('path');
nar = require('../nar');
common = require('./common');
program = require('commander');
echo = common.echo, onEntry = common.onEntry, onError = common.onError, onArchive = common.onArchive;
program.command('extract <archive>').description('\n  Extract archive').usage('<archive> [options]').option('-o, --output <path>', 'Output directory. Default to current directory').option('-d, --debug', 'Enable debug mode. More information will be shown').option('-v, --verbose', 'Enable verbose mode. A lot of information will be shown').on('--help', function(){
  return echo('  Usage examples:\n\n    $ nar extract\n    $ nar extract app.nar\n    $ nar extract app.nar -o some/dir\n    $ nar extract app.nar --debug\n\t');
}).action(function(){
  return extract.apply(this, arguments);
});
extract = function(archive, options){
  var debug, verbose, output, opts, onStart, onEnd, extract, e;
  debug = options.debug, verbose = options.verbose, output = options.output;
  opts = {
    path: archive,
    dest: output
  };
  onStart = function(){
    return echo(
    "Reading archive...");
  };
  onEnd = function(it){
    return echo(
    "Extracted in: " + it.dest);
  };
  extract = function(){
    var archive;
    archive = nar.extract(opts).on('start', onStart).on('error', onError(
    debug)).on('end', onEnd);
    if (debug || verbose) {
      return archive.on('entry', onEntry(
      'Extract'));
    } else {
      return archive.on('archive', onArchive(debug, verbose));
    }
  };
  try {
    return extract();
  } catch (e$) {
    e = e$;
    return onError(debug)(
    "Cannot extract the archive: " + e.message);
  }
};
